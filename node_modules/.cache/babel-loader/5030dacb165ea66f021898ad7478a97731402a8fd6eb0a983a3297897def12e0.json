{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\octaloop-project\\\\client\\\\src\\\\component\\\\card\\\\Card.jsx\";\nimport React from 'react';\nimport './card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = () => {\n  const nfts = [{\n    src: `${process.env.PUBLIC_URL}/images/g1.png`,\n    title: \"NFT 1\"\n  }, {\n    src: `${process.env.PUBLIC_URL}/images/g2.png`,\n    title: \"NFT 2\"\n  }, {\n    src: `${process.env.PUBLIC_URL}/images/g3.png`,\n    title: \"NFT 3\"\n  }, {\n    src: `${process.env.PUBLIC_URL}/images/g2.png`,\n    title: \"NFT 2\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"top-nfts text-center text-light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: nfts.map((nft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nft-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: nft.src,\n              alt: nft.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: nft.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","nfts","src","process","env","PUBLIC_URL","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","nft","index","alt","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/octaloop-project/client/src/component/card/Card.jsx"],"sourcesContent":["import React from 'react';\r\nimport './card.css';\r\n\r\nconst Card = () => {\r\n  const nfts = [\r\n    { src: `${process.env.PUBLIC_URL}/images/g1.png`, title: \"NFT 1\" },\r\n    { src: `${process.env.PUBLIC_URL}/images/g2.png`, title: \"NFT 2\" },\r\n    { src: `${process.env.PUBLIC_URL}/images/g3.png`, title: \"NFT 3\" },\r\n    { src: `${process.env.PUBLIC_URL}/images/g2.png`, title: \"NFT 2\" },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"top-nfts text-center text-light\">\r\n      <div className=\"container\">\r\n        <h2>Top NFTs</h2>\r\n        <div className=\"row\">\r\n        {nfts.map((nft, index) => (\r\n\r\n        <div className=\"col-sm-3\">\r\n            <div className=\"nft-card\" key={index}>\r\n              <img src={nft.src} alt={nft.title} />\r\n              <p>{nft.title}</p>\r\n            </div>\r\n        </div>\r\n))}\r\n\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAMC,IAAI,GAAG,CACX;IAAEC,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,gBAAgB;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClE;IAAEJ,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,gBAAgB;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClE;IAAEJ,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,gBAAgB;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClE;IAAEJ,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,gBAAgB;IAAEC,KAAK,EAAE;EAAQ,CAAC,CACnE;EAED,oBACEP,OAAA;IAASQ,SAAS,EAAC,iCAAiC;IAAAC,QAAA,eAClDT,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBT,OAAA;QAAAS,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBb,OAAA;QAAKQ,SAAS,EAAC,KAAK;QAAAC,QAAA,EACnBP,IAAI,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAErBhB,OAAA;UAAKQ,SAAS,EAAC,UAAU;UAAAC,QAAA,eACrBT,OAAA;YAAKQ,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvBT,OAAA;cAAKG,GAAG,EAAEY,GAAG,CAACZ,GAAI;cAACc,GAAG,EAAEF,GAAG,CAACR;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACrCb,OAAA;cAAAS,QAAA,EAAIM,GAAG,CAACR;YAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAFWG,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAG/B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACK,EAAA,GA3BIjB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}